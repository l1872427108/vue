(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{435:function(t,s,v){"use strict";v.r(s);var a=v(56),_=Object(a.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"axios封装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#axios封装"}},[t._v("#")]),t._v(" axios封装")]),t._v(" "),v("h3",{attrs:{id:"axios"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" axios")]),t._v(" "),v("p",[t._v("axios 是一个轻量的 HTTP 客户端。")]),t._v(" "),v("p",[t._v("基于 XMLHttpRequest 服务来执行 HTTP 请求。支持丰富的配置，支持 promise。支持 浏览器和Node.js 端。 并且 vue2.0 开始，取消了对 vue-resource 的支持。转而推荐 axios。")]),t._v(" "),v("h3",{attrs:{id:"特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),v("ul",[v("li",[t._v("从浏览器创建 XMLHttpRequest")]),t._v(" "),v("li",[t._v("从 node.js 创建 http 请求。")]),t._v(" "),v("li",[t._v("支持 promise API")]),t._v(" "),v("li",[t._v("拦截请求和响应。")]),t._v(" "),v("li",[t._v("转换请求数据和响应数据。")]),t._v(" "),v("li",[t._v("取消请求。")]),t._v(" "),v("li",[t._v("自动转换 JSON 数据。")]),t._v(" "),v("li",[t._v("客户端支持防御 XSRF。")])]),t._v(" "),v("h3",{attrs:{id:"封装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[t._v("#")]),t._v(" 封装")]),t._v(" "),v("p",[t._v("随着项目规模的增大，每发起一次 HTTP 请求，就要把这些超时时间、请求头、请求地址、错误处理统统做一遍。")]),t._v(" "),v("p",[t._v("不仅浪费时间，还让代码变得冗余。难以维护。二次封装 axios。")]),t._v(" "),v("h3",{attrs:{id:"如何封装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何封装"}},[t._v("#")]),t._v(" 如何封装")]),t._v(" "),v("p",[t._v("封装需要与后端协同约定，请求头、状态码、超时时间。")]),t._v(" "),v("p",[t._v("设置接口请求前缀。开发、测试、生成环境不同。")]),t._v(" "),v("p",[t._v("请求头。")]),t._v(" "),v("p",[t._v("请求方法：根据 get、post 等方式可以再次封装。")]),t._v(" "),v("p",[t._v("请求拦截器。")]),t._v(" "),v("p",[t._v("响应拦截器。")])])}),[],!1,null,null,null);s.default=_.exports}}]);
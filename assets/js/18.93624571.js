(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{416:function(t,e,a){"use strict";a.r(e);var l=a(56),o=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vuex和localstorage区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex和localstorage区别"}},[t._v("#")]),t._v(" Vuex和localStorage区别")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("vuex存储在内存中。\nlocalstorage 以文件的方式存储在本地，只能存储字符串类型的数据，存储对象需要 JSON 的 stringify 和 parse 方法进行处理。读取内存比读取硬盘速度快。")])]),t._v(" "),a("li",[a("p",[t._v("Vuex是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集 中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一 种可预测的方式发生变化。vuex 用于组件之间的传值。")])])]),t._v(" "),a("p",[t._v("localstorage 是本地存储，是将数据存储到浏览器的方法，一般是 在跨页面传递数据时使用")]),t._v(" "),a("p",[t._v("Vuex 能做到数据的响应式，localstorage 不能")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("永久性\n刷新页面时 vuex 存储的值会丢失，localstorage 不会。")])]),t._v(" "),a("p",[t._v("对于不变的数据确实可以用 localstorage 可以代替 vuex，但 是当两个组件共用一个数据源（对象或数组）时，如果其中一个组件 改变了该数据源，希望另一个组件响应该变化时，localstorage 无 法做到，原因就是区别 1")])])}),[],!1,null,null,null);e.default=o.exports}}]);